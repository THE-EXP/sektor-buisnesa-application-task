doctype html
html
  head
    title Navigation Template
    meta(name='viewport', content='width=device-width, initial-scale=1.0') // Add the meta tag for viewport

    style.
      .container {
        display: flex;
        align-items: center;
        justify-content: center;
      }
      .pagination {
        display: flex;
        align-items: center;
        justify-content: center; /* Center align the paginator */
        list-style: none;
        padding: 0;
        margin: 0;
        margin-top: 10px; /* Add margin-top to separate the item holder and paginator */
      }
      .pagination li {
        margin: 0 5px;
      }
      .pagination li a {
        display: inline-block;
        padding: 5px 10px;
        background-color: #f8f8f8;
        color: #555;
        text-decoration: none;
        border-radius: 5px;
      }
      .pagination li a:hover {
        background-color: #ccc;
      }
      .pagination li.active a {
        background-color: #555;
        color: #f8f8f8;
      }
      .pagination .arrow {
        padding: 5px;
        background-color: #f8f8f8;
        color: #555;
        text-decoration: none;
        border-radius: 5px;
        pointer-events: none; /* Disable pointer events for disabled arrows */
        opacity: 0.5; /* Reduce opacity for disabled arrows */
      }
      .pagination .arrow:hover {
        background-color: #f8f8f8;
      }
      .pagination .arrow.disabled:hover {
        background-color: #f8f8f8;
        cursor: not-allowed; /* Show not-allowed cursor for disabled arrows */
      }
      .item-holder {
        background-color: #f8f8f8;
        padding: 10px;
        margin-bottom: 10px;
        border-radius: 5px;
        text-align: center; /* Center the content within the item holder */
      }
      .pagination-container {
        display: flex;
        justify-content: center;
      }
  body
    .container
      .item-holder
        // Add your dynamic item content here
        p= `Current Page: ${currentPage}`

      .pagination-container
        ul.pagination
          li
            - if (currentPage === 1)
              a.arrow.disabled(href="#") &lt;
            - else
              a.arrow(href=`/?page=${currentPage - 1}`) &lt;
          - for (let i = 1; i <= pageCount; i++)
            - if (i === currentPage)
              li
                a.active(href=`/?page=${i}`) #{i}
            - else
              li
                a(href=`/?page=${i}`) #{i}
          li
            - if (currentPage === pageCount)
              a.arrow.disabled(href="#") &gt;
            - else
              a.arrow(href=`/?page=${currentPage + 1}`) &gt;